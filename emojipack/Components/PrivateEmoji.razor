@inject IJSRuntime jsr
@inject ISnackbar snackbar
@inject IDialogService dialog
<div id="emojiBox">
    <img id="emojiBoxImage" src="@Image.GetEmojiSrc().Result" @onclick="@EmojiCopy" @onmouseover="EmojiHover"/>
    <div style="position: absolute; bottom: 1px; right: 1px;">
        <MudMenu Direction="Direction.Bottom" Icon="@Icons.Filled.MoreHoriz" Size="Size.Small"
                 Color="Color.Tertiary" Dense="true">
            <MudMenuItem OnClick="Clone">
                Clone Emoji to
            </MudMenuItem>
            <MudMenuItem OnClick="@(() => { DeleteVisible = true;})">
                Delete
            </MudMenuItem>
        </MudMenu>
    </div>
</div>

@* <MudFab Color="Color.Primary" IconSize="Size.Large" Icon="@Icons.Material.Filled.Add" Size="Size.Medium" Style="margin: auto; margin-right: 20px"/>*@

<style>
    .mud-popover {
        z-index: 100000 !important;
    }
    #emojiBox {
        width: 152px;
        height: 152px;
        background: var(--backgroundGrey);
        margin: 8px;
        border-radius: 5px;
        display: inline-block;
        padding: 10px;
        position: relative;
    }
    #emojiBoxImage {
        cursor: pointer;
        object-fit: cover;
        height: 132px;
        width: 132px;
        object-fit: cover;
    }
    #emojiBoxImage:hover {
        transition-timing-function: ease-in-out;
        transition: 0.2s;
        opacity: 0.7;
    }
</style>

<MudDialog @bind-IsVisible="DeleteVisible">
    <TitleContent>
        <MudText Typo="Typo.h6">
            Delete Emoji
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudText Typo="Typo.body1">
            Are you sure you want to delete this emoji? This action is irreversible.
        </MudText>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Outlined" Color="Color.Primary" OnClick="Delete" Class="px-5">Delete</MudButton>
        <MudButton Variant="Variant.Outlined" Color="Color.Primary" OnClick="@(() => {DeleteVisible = false;})" Class="px-5">Cancel</MudButton>
    </DialogActions>
</MudDialog>


@code
{
    [Parameter]
    public Emoji Image { get; set; }

    private async Task EmojiCopy()
    {
        var wjsr = (IJSUnmarshalledRuntime) jsr;
        wjsr.InvokeUnmarshalled<byte[], bool>("copyEmoji", await Image.GetEmoji());
        snackbar.Add("Image Copied to Clipboard!", Severity.Success);
        Image.ClickCount++;
        EventService.InvokeEmojiChangedEvent();
    }

    private void EmojiHover()
    {
        EventService.SelectedEmoji = Image;
        EventService.InvokeHoverEmojiChangedEvent();
        EventService.InvokeEmojiChangedEvent();
    }

    private void Clone()
    {
        var param = new DialogParameters();
        param["source"] = Image;
        dialog.Show<CopyEmojiComponent>("", param);
    }

    private bool DeleteVisible;

    private async Task Delete(MouseEventArgs obj)
    {
        DeleteVisible = false;

        StateHasChanged();
        await EventService.SelectedPack.DeleteEmoji(Image);
        EventService.InvokeEmojiChangedEvent();
    }
}